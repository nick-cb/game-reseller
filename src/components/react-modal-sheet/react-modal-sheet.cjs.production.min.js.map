{"version":3,"file":"react-modal-sheet.cjs.production.min.js","sources":["../src/constants.ts","../src/utils.ts","../src/hooks.tsx","../src/context.tsx","../src/use-prevent-scroll.ts","../src/styles.ts","../src/sheet.tsx","../src/SheetContainer.tsx","../src/SheetContent.tsx","../src/SheetHeader.tsx","../src/SheetBackdrop.tsx","../src/SheetScroller.tsx","../src/index.tsx"],"sourcesContent":["export const MAX_HEIGHT = 'calc(100% - env(safe-area-inset-top) - 34px)';\n\nexport const IS_SSR = typeof window === 'undefined';\n\nexport const DEFAULT_TWEEN_CONFIG = {\n  ease: 'easeOut',\n  duration: 0.2,\n};\n\nexport const REDUCED_MOTION_TWEEN_CONFIG = {\n  ease: 'linear',\n  duration: 0.01,\n};\n\nexport const DRAG_CLOSE_THRESHOLD = 0.6;\n\nexport const DRAG_VELOCITY_THRESHOLD = 500;\n","import * as React from 'react';\n\nexport function getClosest(nums: number[], goal: number) {\n  let closest = nums[0];\n  let minDifference = Math.abs(nums[0] - goal);\n\n  for (let i = 1; i < nums.length; i++) {\n    const difference = Math.abs(nums[i] - goal);\n    if (difference < minDifference) {\n      closest = nums[i];\n      minDifference = difference;\n    }\n  }\n\n  return closest;\n}\n\nexport function applyRootStyles(rootId: string) {\n  const body = document.querySelector('body') as HTMLBodyElement;\n  const root = document.querySelector(`#${rootId}`) as HTMLDivElement;\n\n  if (root) {\n    const p = 24;\n    const h = window.innerHeight;\n    const s = (h - p) / h;\n    body.style.backgroundColor = '#000';\n    root.style.overflow = 'hidden';\n    root.style.willChange = 'transform';\n    root.style.transition =\n      'transform 200ms ease-in-out, border-radius 200ms linear';\n    root.style.transform = `translateY(calc(env(safe-area-inset-top) + ${p / 2}px)) scale(${s})`; // prettier-ignore\n    root.style.borderTopRightRadius = '10px';\n    root.style.borderTopLeftRadius = '10px';\n  }\n}\n\nexport function cleanupRootStyles(rootId: string) {\n  const body = document.querySelector('body') as HTMLBodyElement;\n  const root = document.getElementById(rootId) as HTMLDivElement;\n\n  function onTransitionEnd() {\n    root.style.removeProperty('overflow');\n    root.style.removeProperty('will-change');\n    root.style.removeProperty('transition');\n    body.style.removeProperty('background-color');\n    root.removeEventListener('transitionend', onTransitionEnd);\n  }\n\n  if (root) {\n    // Start animating back\n    root.style.removeProperty('border-top-right-radius');\n    root.style.removeProperty('border-top-left-radius');\n    root.style.removeProperty('transform');\n\n    // Remove temp properties after animation is finished\n    root.addEventListener('transitionend', onTransitionEnd);\n  }\n}\n\nexport function inDescendingOrder(arr: number[]) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i + 1] > arr[i]) return false;\n  }\n\n  return true;\n}\n\nexport function validateSnapTo({\n  snapTo,\n  sheetHeight,\n}: {\n  snapTo: number;\n  sheetHeight: number;\n}) {\n  if (snapTo < 0) {\n    console.warn(\n      `Snap point is out of bounds. Sheet height is ${sheetHeight} but snap point is ${sheetHeight +\n        Math.abs(snapTo)}.`\n    );\n  }\n\n  return Math.max(Math.round(snapTo), 0);\n}\n\nexport function mergeRefs<T = any>(\n  refs: React.ForwardedRef<T>[]\n): React.RefCallback<T> {\n  return (value: any) => {\n    refs.forEach((ref: any) => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport function isTouchDevice() {\n  if (typeof window === 'undefined') return false;\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n}\n","import * as React from 'react';\n\nimport { IS_SSR } from './constants';\nimport { SheetEvents } from './types';\nimport { applyRootStyles, cleanupRootStyles } from './utils';\n\nexport const useIsomorphicLayoutEffect = IS_SSR\n  ? React.useEffect\n  : React.useLayoutEffect;\n\nexport function useModalEffect(isOpen: boolean, rootId?: string) {\n  const prevOpen = usePrevious(isOpen);\n\n  // Automatically apply the iOS modal effect to the body when sheet opens/closes\n  React.useEffect(() => {\n    if (rootId && !prevOpen && isOpen) {\n      applyRootStyles(rootId);\n    } else if (rootId && !isOpen && prevOpen) {\n      cleanupRootStyles(rootId);\n    }\n  }, [isOpen, prevOpen]); // eslint-disable-line\n\n  // Make sure to cleanup modal styles on unmount\n  React.useEffect(() => {\n    return () => {\n      if (rootId && isOpen) cleanupRootStyles(rootId);\n    };\n  }, [isOpen]); // eslint-disable-line\n}\n\nexport function useEventCallbacks(\n  isOpen: boolean,\n  callbacks: React.MutableRefObject<SheetEvents>\n) {\n  const prevOpen = usePrevious(isOpen);\n  const didOpen = React.useRef(false);\n\n  // Because of AnimatePrecence we don't have access to latest isOpen value\n  // so we need to read and write to a ref to determine if we are\n  // opening or closing the sheet\n  const handleAnimationComplete = React.useCallback(() => {\n    if (!didOpen.current) {\n      callbacks.current.onOpenEnd?.();\n      didOpen.current = true;\n    } else {\n      callbacks.current.onCloseEnd?.();\n      didOpen.current = false;\n    }\n  }, [isOpen, prevOpen]); // eslint-disable-line\n\n  React.useEffect(() => {\n    if (!prevOpen && isOpen) {\n      callbacks.current.onOpenStart?.();\n    } else if (!isOpen && prevOpen) {\n      callbacks.current.onCloseStart?.();\n    }\n  }, [isOpen, prevOpen]); // eslint-disable-line\n\n  return { handleAnimationComplete };\n}\n\nexport function useWindowHeight() {\n  const [windowHeight, setWindowHeight] = React.useState(0);\n\n  useIsomorphicLayoutEffect(() => {\n    const updateHeight = () => setWindowHeight(window.innerHeight);\n    window.addEventListener('resize', updateHeight);\n    updateHeight();\n    return () => window.removeEventListener('resize', updateHeight);\n  }, []);\n\n  return windowHeight;\n}\n\nexport function usePrevious<T>(state: T): T | undefined {\n  const ref = React.useRef<T>();\n\n  React.useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n}\n\n// Userland version of the `useEvent` React hook:\n// RFC: https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md\nexport function useEvent<T extends (...args: any[]) => any>(handler: T) {\n  const handlerRef = React.useRef<T>();\n\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n\n  return React.useCallback((...args: any[]) => {\n    const fn = handlerRef.current;\n    return fn?.(...args);\n  }, []) as T;\n}\n","import * as React from 'react';\nimport { SheetScrollerContextType, SheetContextType } from './types';\n\nexport const SheetContext = React.createContext<SheetContextType | undefined>(\n  undefined\n);\n\nexport const useSheetContext = () => {\n  const context = React.useContext(SheetContext);\n  if (!context) throw Error('Sheet context error');\n  return context;\n};\n\nexport const SheetScrollerContext = React.createContext<\n  SheetScrollerContextType | undefined\n>(undefined);\n\nexport function SheetScrollerContextProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const sheetContext = useSheetContext();\n  const [disableDrag, setDisableDrag] = React.useState(\n    !!sheetContext.disableDrag\n  );\n\n  function setDragEnabled() {\n    if (!sheetContext.disableDrag) setDisableDrag(false);\n  }\n\n  function setDragDisabled() {\n    if (!disableDrag) setDisableDrag(true);\n  }\n\n  return (\n    <SheetScrollerContext.Provider\n      value={{ disableDrag, setDragEnabled, setDragDisabled }}\n    >\n      {children}\n    </SheetScrollerContext.Provider>\n  );\n}\n\nexport const useSheetScrollerContext = () => {\n  const context = React.useContext(SheetScrollerContext);\n  if (!context) throw Error('Sheet scroller context error');\n  return context;\n};\n","// Source: https://github.com/adobe/react-spectrum/blob/main/packages/@react-aria/overlays/src/usePreventScroll.ts\nimport {\n  chain,\n  getScrollParent,\n  isIOS,\n  useLayoutEffect,\n} from '@react-aria/utils';\n\ninterface PreventScrollOptions {\n  /** Whether the scroll lock is disabled. */\n  isDisabled?: boolean;\n}\n\n// @ts-ignore\nconst visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n// HTML input types that do not cause the software keyboard to appear.\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset',\n]);\n\n// The number of active usePreventScroll calls. Used to determine whether to revert back to the original page style/scroll position\nlet preventScrollCount = 0;\nlet restore: any;\n\n/**\n * Prevents scrolling on the document body on mount, and\n * restores it on unmount. Also ensures that content does not\n * shift due to the scrollbars disappearing.\n */\nexport function usePreventScroll(options: PreventScrollOptions = {}) {\n  let { isDisabled } = options;\n\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    preventScrollCount++;\n    if (preventScrollCount === 1) {\n      if (isIOS()) {\n        restore = preventScrollMobileSafari();\n      } else {\n        restore = preventScrollStandard();\n      }\n    }\n\n    return () => {\n      preventScrollCount--;\n      if (preventScrollCount === 0) {\n        restore();\n      }\n    };\n  }, [isDisabled]);\n}\n\n// For most browsers, all we need to do is set `overflow: hidden` on the root element, and\n// add some padding to prevent the page from shifting when the scrollbar is hidden.\nfunction preventScrollStandard() {\n  return chain(\n    setStyle(\n      document.documentElement,\n      'paddingRight',\n      `${window.innerWidth - document.documentElement.clientWidth}px`\n    ),\n    setStyle(document.documentElement, 'overflow', 'hidden')\n  );\n}\n\n// Mobile Safari is a whole different beast. Even with overflow: hidden,\n// it still scrolls the page in many situations:\n//\n// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n//    it, so it becomes scrollable.\n// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n//    This may cause even fixed position elements to scroll off the screen.\n// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n//\n// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n//\n// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n//    on the window.\n// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n//    into view ourselves, without scrolling the whole page.\n// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n//    same visually, but makes the actual scroll position always zero. This is required to make all of the\n//    above work or Safari will still try to scroll the page when focusing an input.\n// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n//    to navigate to an input with the next/previous buttons that's outside a modal.\nfunction preventScrollMobileSafari() {\n  let scrollable: Element;\n  let lastY = 0;\n  let onTouchStart = (e: TouchEvent) => {\n    // Store the nearest scrollable parent element from the element that the user touched.\n    scrollable = getScrollParent(e.target as Element);\n    if (\n      scrollable === document.documentElement &&\n      scrollable === document.body\n    ) {\n      return;\n    }\n\n    lastY = e.changedTouches[0].pageY;\n  };\n\n  let onTouchMove = (e: TouchEvent) => {\n    // Prevent scrolling the window.\n    if (\n      scrollable === document.documentElement ||\n      scrollable === document.body\n    ) {\n      e.preventDefault();\n      return;\n    }\n\n    // Prevent scrolling up when at the top and scrolling down when at the bottom\n    // of a nested scrollable area, otherwise mobile Safari will start scrolling\n    // the window instead. Unfortunately, this disables bounce scrolling when at\n    // the top but it's the best we can do.\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n\n    // Fix for: https://github.com/adobe/react-spectrum/pull/3780/files\n    if (bottom === 0) {\n      return;\n    }\n\n    if ((scrollTop <= 0 && y > lastY) || (scrollTop >= bottom && y < lastY)) {\n      e.preventDefault();\n    }\n\n    lastY = y;\n  };\n\n  let onTouchEnd = (e: TouchEvent) => {\n    let target = e.target as HTMLElement;\n\n    // Apply this change if we're not already focused on the target element\n    if (willOpenKeyboard(target) && target !== document.activeElement) {\n      e.preventDefault();\n\n      // Apply a transform to trick Safari into thinking the input is at the top of the page\n      // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n      // be done before the \"focus\" event, so we have to focus the element ourselves.\n      target.style.transform = 'translateY(-2000px)';\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n      });\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    let target = e.target as HTMLElement;\n    if (willOpenKeyboard(target)) {\n      // Transform also needs to be applied in the focus event in cases where focus moves\n      // other than tapping on an input directly, e.g. the next/previous buttons in the\n      // software keyboard. In these cases, it seems applying the transform in the focus event\n      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n      target.style.transform = 'translateY(-2000px)';\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n\n        // This will have prevented the browser from scrolling the focused element into view,\n        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n        if (visualViewport) {\n          if (visualViewport.height < window.innerHeight) {\n            // If the keyboard is already visible, do this after one additional frame\n            // to wait for the transform to be removed.\n            requestAnimationFrame(() => {\n              scrollIntoView(target);\n            });\n          } else {\n            // Otherwise, wait for the visual viewport to resize before scrolling so we can\n            // measure the correct position to scroll to.\n            visualViewport.addEventListener(\n              'resize',\n              () => scrollIntoView(target),\n              { once: true }\n            );\n          }\n        }\n      });\n    }\n  };\n\n  let onWindowScroll = () => {\n    // Last resort. If the window scrolled, scroll it back to the top.\n    // It should always be at the top because the body will have a negative margin (see below).\n    window.scrollTo(0, 0);\n  };\n\n  // Record the original scroll position so we can restore it.\n  // Then apply a negative margin to the body to offset it by the scroll position. This will\n  // enable us to scroll the window to the top, which is required for the rest of this to work.\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n\n  let restoreStyles = chain(\n    setStyle(\n      document.documentElement,\n      'paddingRight',\n      `${window.innerWidth - document.documentElement.clientWidth}px`\n    ),\n    setStyle(document.documentElement, 'overflow', 'hidden'),\n    setStyle(document.body, 'marginTop', `-${scrollY}px`)\n  );\n\n  // Scroll to the top. The negative margin on the body will make this appear the same.\n  window.scrollTo(0, 0);\n\n  let removeEvents = chain(\n    addEvent(document, 'touchstart', onTouchStart, {\n      passive: false,\n      capture: true,\n    }),\n    addEvent(document, 'touchmove', onTouchMove, {\n      passive: false,\n      capture: true,\n    }),\n    addEvent(document, 'touchend', onTouchEnd, {\n      passive: false,\n      capture: true,\n    }),\n    addEvent(document, 'focus', onFocus, true),\n    addEvent(window, 'scroll', onWindowScroll)\n  );\n\n  return () => {\n    // Restore styles and scroll the page back to where it was.\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n}\n\n// Sets a CSS property on an element, and returns a function to revert it to the previous value.\nfunction setStyle(element: any, style: string, value: string) {\n  let cur = element.style[style];\n  element.style[style] = value;\n\n  return () => {\n    element.style[style] = cur;\n  };\n}\n\n// Adds an event listener to an element, and returns a function to remove it.\nfunction addEvent<K extends keyof GlobalEventHandlersEventMap>(\n  target: EventTarget,\n  event: K,\n  handler: (this: Document, ev: GlobalEventHandlersEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  target.addEventListener(event, handler as any, options);\n  return () => {\n    target.removeEventListener(event, handler as any, options);\n  };\n}\n\nfunction scrollIntoView(target: Element) {\n  let root = document.scrollingElement || document.documentElement;\n  while (target && target !== root) {\n    // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n    let scrollable = getScrollParent(target);\n    if (\n      scrollable !== document.documentElement &&\n      scrollable !== document.body &&\n      scrollable !== target\n    ) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      if (targetTop > scrollableTop + target.clientHeight) {\n        scrollable.scrollTop += targetTop - scrollableTop;\n      }\n    }\n\n    target = scrollable.parentElement as any;\n  }\n}\n\nfunction willOpenKeyboard(target: Element) {\n  return (\n    (target instanceof HTMLInputElement &&\n      !nonTextInputTypes.has(target.type)) ||\n    target instanceof HTMLTextAreaElement ||\n    (target instanceof HTMLElement && target.isContentEditable)\n  );\n}\n","import * as CSS from 'csstype';\n\nconst styles: { [key: string]: CSS.Properties } = {\n  wrapper: {\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    pointerEvents: 'none',\n  },\n  backdrop: {\n    zIndex: 1,\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n    touchAction: 'none', // Disable iOS body scrolling\n    border: 'none',\n  },\n  container: {\n    zIndex: 2,\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    backgroundColor: '#fff',\n    borderTopRightRadius: '8px',\n    borderTopLeftRadius: '8px',\n    boxShadow: '0px -2px 16px rgba(0, 0, 0, 0.3)',\n    display: 'flex',\n    flexDirection: 'column',\n    pointerEvents: 'auto',\n  },\n  headerWrapper: {\n    width: '100%',\n  },\n  header: {\n    height: '40px',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  indicator: {\n    width: '18px',\n    height: '4px',\n    borderRadius: '99px',\n    backgroundColor: '#ddd',\n  },\n  content: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '0px',\n    position: 'relative',\n  },\n  scroller: {\n    height: '100%',\n    overflowY: 'auto',\n  },\n};\n\nexport default styles;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  animate,\n  AnimatePresence,\n  motion,\n  PanInfo,\n  Transition,\n  useMotionValue,\n  useReducedMotion,\n  useTransform,\n} from 'framer-motion';\n\nimport {\n  useModalEffect,\n  useWindowHeight,\n  useIsomorphicLayoutEffect,\n  useEvent,\n} from './hooks';\n\nimport {\n  REDUCED_MOTION_TWEEN_CONFIG,\n  DEFAULT_TWEEN_CONFIG,\n  DRAG_CLOSE_THRESHOLD,\n  DRAG_VELOCITY_THRESHOLD,\n  IS_SSR,\n} from './constants';\n\nimport { SheetContextType, SheetProps } from './types';\nimport { SheetScrollerContextProvider, SheetContext } from './context';\nimport { getClosest, inDescendingOrder, validateSnapTo } from './utils';\nimport { usePreventScroll } from './use-prevent-scroll';\nimport styles from './styles';\n\nconst Sheet = React.forwardRef<any, SheetProps>(\n  (\n    {\n      onOpenStart,\n      onOpenEnd,\n      onClose,\n      onCloseStart,\n      onCloseEnd,\n      onSnap,\n      children,\n      isOpen,\n      snapPoints,\n      rootId,\n      mountPoint,\n      style,\n      detent = 'full-height',\n      initialSnap = 0,\n      disableDrag = false,\n      prefersReducedMotion = false,\n      tweenConfig = DEFAULT_TWEEN_CONFIG,\n      dragVelocityThreshold = DRAG_VELOCITY_THRESHOLD,\n      dragCloseThreshold = DRAG_CLOSE_THRESHOLD,\n      ...rest\n    },\n    ref\n  ) => {\n    const sheetRef = React.useRef<any>(null);\n    const indicatorRotation = useMotionValue(0);\n    const windowHeight = useWindowHeight();\n    const shouldReduceMotion = useReducedMotion();\n    const reduceMotion = Boolean(prefersReducedMotion || shouldReduceMotion);\n    const animationOptions: Transition = {\n      type: 'tween',\n      ...(reduceMotion ? REDUCED_MOTION_TWEEN_CONFIG : tweenConfig),\n    };\n\n    // NOTE: the inital value for `y` doesn't matter since it is overwritten by\n    // the value driven by the `AnimatePresence` component when the sheet is opened\n    // and after that it is driven by the gestures and/or snapping\n    const y = useMotionValue(0);\n\n    const zIndex = useTransform(y, value =>\n      value >= windowHeight ? -1 : 9999999\n    );\n\n    const visibility = useTransform(y, value =>\n      value >= windowHeight ? 'hidden' : 'visible'\n    );\n\n    // Keep the callback fns up-to-date so that they can be accessed inside\n    // the effect without including them to the dependencies array\n    const callbacks = React.useRef({\n      onOpenStart,\n      onOpenEnd,\n      onCloseStart,\n      onCloseEnd,\n    });\n\n    useIsomorphicLayoutEffect(() => {\n      callbacks.current = {\n        onOpenStart,\n        onOpenEnd,\n        onCloseStart,\n        onCloseEnd,\n      };\n    });\n\n    if (snapPoints) {\n      // Convert negative / percentage snap points to absolute values\n      snapPoints = snapPoints.map(point => {\n        // Percentage values e.g. between 0.0 and 1.0\n        if (point > 0 && point <= 1) return Math.round(point * windowHeight);\n        return point < 0 ? windowHeight + point : point; // negative values\n      });\n\n      console.assert(\n        inDescendingOrder(snapPoints) || windowHeight === 0,\n        `Snap points need to be in descending order got: [${snapPoints}]`\n      );\n    }\n\n    const onDrag = useEvent((_, { delta }: PanInfo) => {\n      // Update drag indicator rotation based on drag velocity\n      const velocity = y.getVelocity();\n\n      if (velocity > 0) indicatorRotation.set(10);\n      if (velocity < 0) indicatorRotation.set(-10);\n\n      // Make sure user cannot drag beyond the top of the sheet\n      y.set(Math.max(y.get() + delta.y, 0));\n    });\n\n    const onDragEnd = useEvent((_, { velocity }: PanInfo) => {\n      if (velocity.y > dragVelocityThreshold) {\n        // User flicked the sheet down\n        onClose();\n      } else {\n        const sheetEl = sheetRef.current as HTMLDivElement;\n        const sheetHeight = sheetEl.getBoundingClientRect().height;\n        const currentY = y.get();\n\n        let snapTo = 0;\n\n        if (snapPoints) {\n          const snapToValues = snapPoints.map(\n            p => sheetHeight - Math.min(p, sheetHeight)\n          );\n\n          // Allow snapping to the top of the sheet if detent is set to `content-height`\n          if (detent === 'content-height' && !snapToValues.includes(0)) {\n            snapToValues.unshift(0);\n          }\n\n          // Get the closest snap point\n          snapTo = getClosest(snapToValues, currentY);\n        } else if (currentY / sheetHeight > dragCloseThreshold) {\n          // Close if dragged over enough far\n          snapTo = sheetHeight;\n        }\n\n        snapTo = validateSnapTo({ snapTo, sheetHeight });\n\n        // Update the spring value so that the sheet is animated to the snap point\n        animate(y, snapTo, animationOptions);\n\n        if (snapPoints && onSnap) {\n          const snapValue = Math.abs(Math.round(snapPoints[0] - snapTo));\n          const snapIndex = snapPoints.indexOf(getClosest(snapPoints, snapValue)); // prettier-ignore\n          onSnap(snapIndex);\n        }\n\n        const roundedSheetHeight = Math.round(sheetHeight);\n        const shouldClose = snapTo >= roundedSheetHeight;\n\n        if (shouldClose) onClose();\n      }\n\n      // Reset indicator rotation after dragging\n      indicatorRotation.set(0);\n    });\n\n    // Trigger onSnap callback when sheet is opened or closed\n    React.useEffect(() => {\n      if (!snapPoints || !onSnap) return;\n      const snapIndex = isOpen ? initialSnap : snapPoints.length - 1;\n      onSnap(snapIndex);\n    }, [isOpen]); // eslint-disable-line\n\n    React.useImperativeHandle(ref, () => ({\n      y,\n      snapTo: (snapIndex: number) => {\n        const sheetEl = sheetRef.current as HTMLDivElement | null;\n\n        if (\n          snapPoints &&\n          snapPoints[snapIndex] !== undefined &&\n          sheetEl !== null\n        ) {\n          const sheetHeight = sheetEl.getBoundingClientRect().height;\n          const snapPoint = snapPoints[snapIndex];\n          const snapTo = validateSnapTo({\n            snapTo: sheetHeight - snapPoint,\n            sheetHeight,\n          });\n\n          animate(y, snapTo, animationOptions);\n          if (onSnap) onSnap(snapIndex);\n          if (snapTo >= sheetHeight) onClose();\n        }\n      },\n    }));\n\n    useModalEffect(isOpen, rootId);\n\n    // Framer Motion should handle body scroll locking but it's not working\n    // properly on iOS. Scroll locking from React Aria seems to work much better.\n    usePreventScroll({ isDisabled: !isOpen });\n\n    const dragProps = React.useMemo(() => {\n      const dragProps: SheetContextType['dragProps'] = {\n        drag: 'y',\n        dragElastic: 0,\n        dragConstraints: { top: 0, bottom: 0 },\n        dragMomentum: false,\n        dragPropagation: false,\n        onDrag,\n        onDragEnd,\n      };\n\n      return disableDrag ? undefined : dragProps;\n    }, [disableDrag]); // eslint-disable-line\n\n    const context: SheetContextType = {\n      y,\n      sheetRef,\n      isOpen,\n      initialSnap,\n      snapPoints,\n      detent,\n      indicatorRotation,\n      callbacks,\n      dragProps,\n      windowHeight,\n      animationOptions,\n      reduceMotion,\n      disableDrag,\n    };\n\n    const sheet = (\n      <SheetContext.Provider value={context}>\n        <motion.div\n          {...rest}\n          ref={ref}\n          style={{ ...styles.wrapper, zIndex, visibility, ...style }}\n        >\n          <AnimatePresence>\n            {/* NOTE: AnimatePresence requires us to set keys to children */}\n            {isOpen ? (\n              <SheetScrollerContextProvider>\n                {React.Children.map(children, (child: any, i) =>\n                  React.cloneElement(child, { key: `sheet-child-${i}` })\n                )}\n              </SheetScrollerContextProvider>\n            ) : null}\n          </AnimatePresence>\n        </motion.div>\n      </SheetContext.Provider>\n    );\n\n    if (IS_SSR) return sheet;\n\n    // @ts-ignore\n    return ReactDOM.createPortal(sheet, mountPoint ?? document.body);\n  }\n);\n\nexport default Sheet;\n","import * as React from 'react';\nimport { motion } from 'framer-motion';\n\nimport { SheetContainerProps } from './types';\nimport { useSheetContext } from './context';\nimport { useEventCallbacks } from './hooks';\nimport { MAX_HEIGHT } from './constants';\nimport { mergeRefs } from './utils';\nimport styles from './styles';\n\nconst SheetContainer = React.forwardRef<any, SheetContainerProps>(\n  ({ children, style = {}, className = '', ...rest }, ref) => {\n    const {\n      y,\n      isOpen,\n      callbacks,\n      snapPoints,\n      initialSnap = 0,\n      sheetRef,\n      windowHeight,\n      detent,\n      animationOptions,\n      reduceMotion,\n    } = useSheetContext();\n\n    const { handleAnimationComplete } = useEventCallbacks(isOpen, callbacks);\n    const initialY = snapPoints ? snapPoints[0] - snapPoints[initialSnap] : 0;\n    const maxSnapHeight = snapPoints ? snapPoints[0] : null;\n\n    const height =\n      maxSnapHeight !== null\n        ? `min(${maxSnapHeight}px, ${MAX_HEIGHT})`\n        : MAX_HEIGHT;\n\n    return (\n      <motion.div\n        {...rest}\n        ref={mergeRefs([sheetRef, ref])}\n        className={`react-modal-sheet-container ${className}`}\n        style={{\n          ...styles.container,\n          ...style,\n          ...(detent === 'full-height' && { height }),\n          ...(detent === 'content-height' && { maxHeight: height }),\n          y,\n        }}\n        initial={reduceMotion ? false : { y: windowHeight }}\n        animate={{ y: initialY, transition: animationOptions }}\n        exit={{ y: windowHeight, transition: animationOptions }}\n        onAnimationComplete={handleAnimationComplete}\n      >\n        {children}\n      </motion.div>\n    );\n  }\n);\n\nexport default SheetContainer;\n","import * as React from 'react';\nimport { motion } from 'framer-motion';\n\nimport { SheetDraggableProps } from './types';\nimport { useSheetScrollerContext, useSheetContext } from './context';\nimport styles from './styles';\n\nconst SheetContent = React.forwardRef<any, SheetDraggableProps>(\n  ({ children, style, disableDrag, className = '', ...rest }, ref) => {\n    const sheetContext = useSheetContext();\n    const sheetScrollerContext = useSheetScrollerContext();\n\n    const dragProps =\n      disableDrag || sheetScrollerContext.disableDrag\n        ? undefined\n        : sheetContext.dragProps;\n\n    return (\n      <motion.div\n        {...rest}\n        ref={ref}\n        className={`react-modal-sheet-content ${className}`}\n        style={{ ...styles.content, ...style }}\n        {...dragProps}\n      >\n        {children}\n      </motion.div>\n    );\n  }\n);\n\nexport default SheetContent;\n","import * as React from 'react';\nimport { motion, useTransform } from 'framer-motion';\n\nimport { SheetDraggableProps } from './types';\nimport { useSheetContext } from './context';\nimport styles from './styles';\n\nconst SheetHeader = React.forwardRef<any, SheetDraggableProps>(\n  ({ children, style, disableDrag, ...rest }, ref) => {\n    const { indicatorRotation, dragProps } = useSheetContext();\n    const _dragProps = disableDrag ? undefined : dragProps;\n\n    const indicator1Transform = useTransform(\n      indicatorRotation,\n      r => `translateX(2px) rotate(${r}deg)`\n    );\n\n    const indicator2Transform = useTransform(\n      indicatorRotation,\n      r => `translateX(-2px) rotate(${-1 * r}deg)`\n    );\n\n    return (\n      <motion.div\n        {...rest}\n        ref={ref}\n        style={{ ...styles.headerWrapper, ...style }}\n        {..._dragProps}\n      >\n        {children || (\n          <div className=\"react-modal-sheet-header\" style={styles.header}>\n            <motion.span\n              className=\"react-modal-sheet-drag-indicator\"\n              style={{ ...styles.indicator, transform: indicator1Transform }}\n            />\n            <motion.span\n              className=\"react-modal-sheet-drag-indicator\"\n              style={{ ...styles.indicator, transform: indicator2Transform }}\n            />\n          </div>\n        )}\n      </motion.div>\n    );\n  }\n);\n\nexport default SheetHeader;\n","import * as React from 'react';\nimport { motion } from 'framer-motion';\n\nimport { SheetBackdropProps } from './types';\nimport styles from './styles';\n\nconst isClickable = (props: any) => !!props.onClick || !!props.onTap;\n\nconst SheetBackdrop = React.forwardRef<any, SheetBackdropProps>(\n  ({ style = {}, className = '', ...rest }, ref) => {\n    const Comp = isClickable(rest) ? motion.button : motion.div;\n    const pointerEvents = isClickable(rest) ? 'auto' : 'none';\n\n    return (\n      <Comp\n        {...rest}\n        ref={ref}\n        className={`react-modal-sheet-backdrop ${className}`}\n        style={{ ...styles.backdrop, ...style, pointerEvents }}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      />\n    );\n  }\n);\n\nexport default SheetBackdrop;\n","import * as React from 'react';\n\nimport { useSheetScrollerContext } from './context';\nimport { SheetScrollerProps } from './types';\nimport { isTouchDevice } from './utils';\nimport styles from './styles';\n\nconst SheetScroller = React.forwardRef<any, SheetScrollerProps>(\n  ({ draggableAt = 'top', children, style, className = '', ...rest }, ref) => {\n    const sheetScrollerContext = useSheetScrollerContext();\n\n    function determineDragState(element: HTMLDivElement) {\n      const { scrollTop, scrollHeight, clientHeight } = element;\n      const isScrollable = scrollHeight > clientHeight;\n\n      if (!isScrollable) return;\n\n      const isAtTop = scrollTop <= 0;\n      const isAtBottom = scrollHeight - scrollTop === clientHeight;\n\n      const shouldEnable =\n        (draggableAt === 'top' && isAtTop) ||\n        (draggableAt === 'bottom' && isAtBottom) ||\n        (draggableAt === 'both' && (isAtTop || isAtBottom));\n\n      if (shouldEnable) {\n        sheetScrollerContext.setDragEnabled();\n      } else {\n        sheetScrollerContext.setDragDisabled();\n      }\n    }\n\n    function onScroll(e: React.UIEvent<HTMLDivElement>) {\n      determineDragState(e.currentTarget);\n    }\n\n    function onTouchStart(e: React.TouchEvent<HTMLDivElement>) {\n      determineDragState(e.currentTarget);\n    }\n\n    const scrollProps = isTouchDevice()\n      ? { onScroll, onTouchStart }\n      : undefined;\n\n    return (\n      <div\n        {...rest}\n        ref={ref}\n        className={`react-modal-sheet-scroller ${className}`}\n        style={{ ...styles.scroller, ...style }}\n        {...scrollProps}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default SheetScroller;\n","import { MotionValue } from 'framer-motion';\n\nimport Sheet from './sheet';\nimport SheetContainer from './SheetContainer';\nimport SheetContent from './SheetContent';\nimport SheetHeader from './SheetHeader';\nimport SheetBackdrop from './SheetBackdrop';\nimport SheetScroller from './SheetScroller';\nimport { SheetCompound } from './types';\n\nexport type SheetRef = {\n  y: MotionValue<number>;\n  snapTo: (index: number) => void;\n};\n\n// HACK: this is needed to get the typing to work properly...\nconst _SheetCompound: any = Sheet;\n_SheetCompound.Container = SheetContainer;\n_SheetCompound.Header = SheetHeader;\n_SheetCompound.Content = SheetContent;\n_SheetCompound.Backdrop = SheetBackdrop;\n_SheetCompound.Scroller = SheetScroller;\n\nexport default _SheetCompound as SheetCompound;\n"],"names":["MAX_HEIGHT","IS_SSR","window","DEFAULT_TWEEN_CONFIG","ease","duration","REDUCED_MOTION_TWEEN_CONFIG","getClosest","nums","goal","closest","minDifference","Math","abs","i","length","difference","cleanupRootStyles","rootId","body","document","querySelector","root","getElementById","style","removeProperty","addEventListener","onTransitionEnd","removeEventListener","validateSnapTo","_ref","snapTo","sheetHeight","console","warn","max","round","useIsomorphicLayoutEffect","React","usePrevious","state","ref","current","useEvent","handler","handlerRef","fn","_len","arguments","args","Array","_key","apply","SheetContext","undefined","useSheetContext","context","Error","SheetScrollerContext","SheetScrollerContextProvider","children","sheetContext","_React$useState","disableDrag","setDisableDrag","Provider","value","setDragEnabled","setDragDisabled","restore","useSheetScrollerContext","visualViewport","nonTextInputTypes","Set","preventScrollCount","setStyle","element","cur","addEvent","target","event","options","scrollIntoView","scrollingElement","documentElement","scrollable","getScrollParent","scrollableTop","getBoundingClientRect","top","targetTop","clientHeight","scrollTop","parentElement","willOpenKeyboard","HTMLInputElement","has","type","HTMLTextAreaElement","HTMLElement","isContentEditable","styles","wrapper","position","bottom","left","right","overflow","pointerEvents","backdrop","zIndex","width","height","backgroundColor","touchAction","border","container","borderTopRightRadius","borderTopLeftRadius","boxShadow","display","flexDirection","headerWrapper","header","alignItems","justifyContent","indicator","borderRadius","content","flexGrow","minHeight","scroller","overflowY","Sheet","onOpenStart","onOpenEnd","onClose","onCloseStart","onCloseEnd","onSnap","isOpen","snapPoints","mountPoint","_ref$detent","detent","_ref$initialSnap","initialSnap","_ref$disableDrag","_ref$prefersReducedMo","prefersReducedMotion","_ref$tweenConfig","tweenConfig","_ref$dragVelocityThre","dragVelocityThreshold","_ref$dragCloseThresho","dragCloseThreshold","rest","_objectWithoutPropertiesLoose","_excluded","sheetRef","indicatorRotation","useMotionValue","windowHeight","setWindowHeight","updateHeight","innerHeight","useWindowHeight","shouldReduceMotion","useReducedMotion","reduceMotion","Boolean","animationOptions","_extends","y","useTransform","visibility","callbacks","map","point","assert","arr","inDescendingOrder","onDrag","_","_ref2","delta","velocity","getVelocity","set","get","onDragEnd","_ref3","currentY","snapToValues","p","min","includes","unshift","animate","snapValue","snapIndex","indexOf","sheetEl","prevOpen","h","s","willChange","transition","transform","applyRootStyles","useModalEffect","isDisabled","useLayoutEffect","isIOS","lastY","scrollX","pageXOffset","scrollY","pageYOffset","restoreStyles","chain","innerWidth","clientWidth","scrollTo","removeEvents","e","changedTouches","pageY","passive","capture","scrollHeight","preventDefault","activeElement","focus","requestAnimationFrame","once","preventScrollMobileSafari","usePreventScroll","dragProps","drag","dragElastic","dragConstraints","dragMomentum","dragPropagation","sheet","motion","div","AnimatePresence","child","key","ReactDOM","SheetContainer","refs","_ref$style","_ref$className","className","_useSheetContext","_useSheetContext$init","handleAnimationComplete","didOpen","useEventCallbacks","initialY","maxSnapHeight","forEach","maxHeight","initial","exit","onAnimationComplete","SheetContent","sheetScrollerContext","SheetHeader","_dragProps","indicator1Transform","r","indicator2Transform","span","isClickable","props","onClick","onTap","SheetBackdrop","Comp","button","opacity","SheetScroller","draggableAt","_ref$draggableAt","determineDragState","isAtTop","isAtBottom","scrollProps","navigator","maxTouchPoints","onScroll","currentTarget","onTouchStart","_SheetCompound","Container","Header","Content","Backdrop","Scroller"],"mappings":"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"}