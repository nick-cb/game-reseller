import './globals.css';
import { Inter } from 'next/font/google';
import Image from 'next/image';
import QueryContext from '../components/QueryContext';
import Link from 'next/link';
import ActiveLink from '../components/ActiveLink';
// import OfflineBanner from "@/components/OfflineBanner";
// import "@/worker/offline_worker";
import { AuthControls } from '@/components/AuthControls';
import { HideOnRoute } from '@/components/HideOnRoutes';
import { Suspense } from 'react';
import { SnackContextProvider } from '@/components/SnackContext';
import { CartButton } from '@/components/pages/cart/CartButton';
// import { TurboLink } from "@/components/Turbolink";
import NextTopLoader from 'nextjs-toploader';
import { DesktopSearch, MobileSearch } from '@/components/pages/home/search/SearchBar';

const atkinsonHyper = Inter({
  weight: ['100', '200', '300', '400', '500', '600', '700'],
  subsets: ['latin'],
  preload: true,
});

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({ children, modal }: RootLayoutProps) {
  return (
    <html lang="en" className="scroll-pt-[116px]">
      <QueryContext>
        <body className={atkinsonHyper.className + ' bg-default'}>
          <Header />
          <Nav />
          <main className="mx-auto max-w-[1952px] px-4 pb-16 pt-20 text-white_primary lg:px-24 xl:px-44">
            <SnackContextProvider>{children}</SnackContextProvider>
            {modal}
          </main>
          <HideOnRoute
            matches={[
              { pathname: '/login' },
              { pathname: '/signup' },
              { pathname: '/browse' },
              { pathname: '/cart' },
              { pathname: '/checkout' },
              { pathname: '^.*/order/', regex: true },
            ]}
          >
            <MobileSearch />
          </HideOnRoute>
        </body>
      </QueryContext>
    </html>
  );
}

function Header() {
  return (
    <header className="fixed top-0 z-20 flex min-h-[56px] w-full justify-between bg-paper px-4 py-2 lg:px-24 xl:px-44">
      <Link href={`/`}>
        <Image src={'/images/logo.png'} alt={'logo-of-a-penguine'} width={40} height={40} />
      </Link>
      <HideOnRoute matches={[{ pathname: '/login' }, { pathname: '/signup' }]}>
        <div className="flex items-center gap-4 pl-4 text-sm text-white_primary">
          <DesktopSearch />
          <CartButton />
          <AuthControls />
        </div>
      </HideOnRoute>
    </header>
  );
}

function Nav() {
  return (
    <HideOnRoute
      matches={[
        { pathname: '/order' },
        { pathname: '/login', not: [{ type: 'query', key: 'type' }] },
        { pathname: '/signup' },
        { pathname: '/cart' },
        { pathname: '/checkout' },
        { pathname: '^.*/order/', regex: true },
      ]}
    >
      <div className="h-[56px]" />
      <nav className="fixed top-[56px] z-10 flex w-full gap-4 bg-default/90 px-4 lg:px-24 xl:px-44 backdrop-blur-md">
        <div
          className={
            'pointer-events-none absolute inset-0'
            // " [--extended-by:50px] [--cutoff:calc(100%-var(--extended-by))] [--blur:25px] " +
            // " bottom-[calc(-1*var(--extended-by))] " +
            // " [-webkit-mask-image:linear-gradient(to_bottom,_black_0,_black_var(--cutoff),_transparent_var(--cutoff))] " +
            // " [-webkit-backdrop-filter:blur(var(--blur))] " +
            // " [backdrop-filter:blur(var(--blur))] "
          }
        ></div>
        <ActiveLink matches={[{ name: '/', exact: true }, { name: 'discover' }]}>
          <Link
            className="z-[1] py-4 text-sm text-white/60 transition-colors hover:text-white_primary"
            href={'/'}
          >
            Discover
          </Link>
        </ActiveLink>
        <ActiveLink matches={[{ name: 'browse' }]}>
          <Link
            className="z-[1] py-4 text-sm text-white/60 transition-colors hover:text-white_primary"
            href={'/browse'}
          >
            Browse
          </Link>
        </ActiveLink>
      </nav>
      <NextTopLoader showSpinner={false} color={'hsl(209, 100%, 45%)'} />
    </HideOnRoute>
  );
}
